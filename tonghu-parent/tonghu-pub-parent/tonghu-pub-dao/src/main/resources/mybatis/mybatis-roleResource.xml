<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="roleResourceDao">
	<resultMap id="roleResourceInfoResult" type="roleResource">
		<id property="id" column="id"/>
		<result property="roleId" column="role_id"/>
		<result property="resourceId" column="resource_id"/>
		<result property="createTime" column="create_time"/>
		<result property="createUserId" column="create_userid"/>
		<result property="updateTime" column="update_time"/>
		<result property="updateUserId" column="update_userid"/>
		<result property="note" column="note"/>
	</resultMap>
	
	<sql id="allColumn">
		id, role_id, resource_id, create_time, create_userid, update_time, update_userid, note
  </sql>
  
	<insert id="insertNewRoleResource" parameterType="roleResource" useGeneratedKeys="true" keyProperty="id">
		insert into role_resource (
		<trim suffix="" suffixOverrides=",">
		    <if test="roleId != null">
				role_id,
			</if>
			<if test="resourceId != null">
				resource_id,
			</if>
			create_time,
			<if test="createUserId != null">
				create_userid,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_userid,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		) values(
		<trim suffix="" suffixOverrides=",">
		   <if test="roleId != null">
				#{roleId},
			</if>
			<if test="resourceId != null">
				#{resourceId},
			</if>
			now(),
			<if test="createUserId != null">
				#{createUserId},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="updateUserId != null">
				#{updateUserId},
			</if>
			<if test="note != null">
				#{note},
			</if>
		</trim>
		)
		<selectKey keyProperty="id" resultType="long" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 获取所有的系统角色资源信息 -->
	<select id="selectAllRoleResource" resultMap="roleResourceInfoResult" resultType="roleResource">
		SELECT 
			<include refid="allColumn"/> 
		FROM 
			role_resource 
		ORDER BY resource_id ASC
	</select>
	
	<!-- 根据角色id获取系统角色资源信息 -->
	<select id="selectRoleResourceInfoByRoleId" resultMap="roleResourceInfoResult" resultType="roleResource" parameterType="long">
		SELECT 
			<include refid="allColumn"/> 
		FROM 
			role_resource
		WHERE role_id = #{roleId}
	</select>
	
	<!-- 根据角色id集合获取系统角色资源信息 -->
	<select id="selectRoleResourceInfoByRoleIdList" resultMap="roleResourceInfoResult" 
				resultType="roleResource" parameterType="java.util.List">
		SELECT 
			<include refid="allColumn"/> 
		FROM 
			role_resource
		WHERE role_id IN
			<foreach collection="list" item="id"
				open="(" separator="," close=")">
				#{id}
			</foreach> 
		ORDER BY resource_id ASC
	</select>
	
	<!-- 根据用户ID删除用户信息 物理删除 -->
    <delete id="deleteRoleResourceByRoleId" parameterType="long">
    	DELETE FROM role_resource WHERE role_id = #{roleId}
    </delete>
	
</mapper>