<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/util
		 http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 支持注解注入bean -->
	<context:component-scan base-package="com.tonghu.app.stage,com.tonghu.pub" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 实现SpringContextUtils中context参数的初始化，供该类提供springContext的静态get方法使用 -->
	<bean class="com.tonghu.pub.common.spring.SpringContextUtils"/>

	<import resource="classpath:configs/spring-tonghu-jdbc.xml" />
	<import resource="classpath:configs/spring-tonghu-stage-security.xml" />

	<util:properties id="webConfigs" location="classpath:configs/tonghu-stage-web-config.properties" />

	<util:properties id="inputConfigCons" location="classpath:configs/tonghu-stage-input-config.properties" />

	<!-- 配置线程池 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="20" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="100" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="10000" />
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

	
</beans>
